#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset


if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi
export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

#  This is a small program that repeatedly tries to connect to postgres
#  eventually when it does, it launches the main django projects.
#  This is needed because if the postgres VM comes up after the django VM,
#  django freaks out.

postgres_ready() {
python << END
import sys

import psycopg2

try:
    psycopg2.connect(
        dbname="osler",
        user="${POSTGRES_USER}",
        password="${POSTGRES_PASSWORD}",
        host="${POSTGRES_HOST}",
        port="5432",
    )
except psycopg2.OperationalError as e:
    sys.exit(-1)
sys.exit(0)

END
}
until postgres_ready; do
  >&2 echo 'Waiting for PostgreSQL to become available... '
  sleep 1
done
>&2 echo 'PostgreSQL is available'

exec "$@"
